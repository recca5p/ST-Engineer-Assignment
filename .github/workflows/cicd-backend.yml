name: Build and deploy Backend to EC2
run-name: "#${{ github.run_number }} - ${{ github.ref_name }} - ${{ github.sha }} - Backend"

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: 
      - 'server/**'
      - '.github/workflows/cicd-backend.yml'
  pull_request:
    branches: [ "main" ]
    paths: 
      - 'server/**'
      - '.github/workflows/cicd-backend.yml'

env:
  WORKING_DIRECTORY: server

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.1'
        

    - name: Build
      run: go build -v ./...
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Test
      run: go test -v ./...
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Update app.env
      run: |
        sed -i "s|^DB_SOURCE=.*|DB_SOURCE=${{ secrets.DB_STRING }}|" app.env
        sed -i "s|^TOKEN_SYMMETRIC_KEY=.*|TOKEN_SYMMETRIC_KEY=${{ secrets.KEY }}|" app.env
      working-directory: ${{ env.WORKING_DIRECTORY }}

          
    - name: Verify app.env
      run: cat app.env
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  
    - name: Extract metadata (tags, version) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/stegg
        tags: |
          type=raw,value=${{ github.sha }}
  
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ${{ env.WORKING_DIRECTORY }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        file: ${{ env.WORKING_DIRECTORY }}/Dockerfile 

  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps: 
        - name: Decode EC2 Key
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.EC2_KEY }}" | base64 --decode > ~/.ssh/ec2-key.pem
            ls -l ~/.ssh
            
        - name: Set permissions for EC2 key
          run: |
            chmod 600 ~/.ssh/ec2-key.pem
            ls -l ~/.ssh
    
        - name: Deploy to EC2
          env:
            EC2_USER: ubuntu
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_KEY_PATH: ~/.ssh/ec2-key.pem
            DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/stegg:${{ github.sha }}
          run: |
            ssh -o StrictHostKeyChecking=no -i $EC2_KEY_PATH $EC2_USER@$EC2_HOST <<EOF
              # Clean up previous containers and images
              sudo docker stop stegg-app || true
              sudo docker rm -f stegg-app || true
              sudo docker rmi -f $DOCKER_IMAGE || true
              
              # Pull the new Docker image
              sudo docker pull $DOCKER_IMAGE
              
              # Run the new container with Nginx and Let's Encrypt
              sudo docker run -dp 9090:8080 \
                --name stegg-app \
                --mount type=volume,source=letsencrypt,target=/etc/letsencrypt \
                $DOCKER_IMAGE
            EOF
